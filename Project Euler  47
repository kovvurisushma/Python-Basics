import sympy
import math
def sqrt(n):
  return int(math.sqrt(n))

def lo_divisors(n):
  li = [1]
  for f in range(2 , sqrt(n) + 1):
    if n % f == 0 :
      yield f

def hi_divisors(n):
  return [n//f for f in lo_divisors(n) ]

def factors(n):
  return list(lo_divisors(n)) + hi_divisors(n)

def prime_factors(num):
  return [x for x in factors(num) if sympy.isprime(x)] 


def distinct_primes(LOWER,LIMIT):
  for x in range(LOWER,LIMIT):
    if sum(list(consecutive_Primes(x , 4))) == 4 :
      return x
    x += 4 - sum(list(consecutive_Primes(x , 4)))
   
    
    
def consecutive_Primes(num,n) :
  for x in range(n):
    if len(prime_factors(num + x)) == n :
      yield 1
    else:
      yield 0
      
distinct_primes(8,1000000)
